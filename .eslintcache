[{"/home/mahmoud/infograph/front-end/shipping/src/index.js":"1","/home/mahmoud/infograph/front-end/shipping/src/App.js":"2","/home/mahmoud/infograph/front-end/shipping/src/pages/HomePage.js":"3","/home/mahmoud/infograph/front-end/shipping/src/pages/AuthPage.js":"4","/home/mahmoud/infograph/front-end/shipping/src/components/Auth/AuthForm.js":"5","/home/mahmoud/infograph/front-end/shipping/src/components/StartingPage/StartingPageContent.js":"6","/home/mahmoud/infograph/front-end/shipping/src/components/Layout/Layout.js":"7","/home/mahmoud/infograph/front-end/shipping/src/components/Layout/MainNavigation.js":"8","/home/mahmoud/infograph/front-end/shipping/src/pages/AddPackagePage.js":"9","/home/mahmoud/infograph/front-end/shipping/src/pages/ViewPackagesPage.js":"10","/home/mahmoud/infograph/front-end/shipping/src/store/auth.js":"11"},{"size":350,"mtime":1665472712650,"results":"12","hashOfConfig":"13"},{"size":1113,"mtime":1665560625881,"results":"14","hashOfConfig":"13"},{"size":171,"mtime":1648639796000,"results":"15","hashOfConfig":"13"},{"size":130,"mtime":1648639796000,"results":"16","hashOfConfig":"13"},{"size":4509,"mtime":1665567792191,"results":"17","hashOfConfig":"13"},{"size":783,"mtime":1665561133201,"results":"18","hashOfConfig":"13"},{"size":246,"mtime":1648639796000,"results":"19","hashOfConfig":"13"},{"size":1009,"mtime":1665482605319,"results":"20","hashOfConfig":"13"},{"size":4381,"mtime":1665567742921,"results":"21","hashOfConfig":"13"},{"size":2040,"mtime":1665567819501,"results":"22","hashOfConfig":"13"},{"size":1173,"mtime":1665562330101,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"izk8ee",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/home/mahmoud/infograph/front-end/shipping/src/index.js",[],["50","51"],"/home/mahmoud/infograph/front-end/shipping/src/App.js",[],"/home/mahmoud/infograph/front-end/shipping/src/pages/HomePage.js",[],"/home/mahmoud/infograph/front-end/shipping/src/pages/AuthPage.js",[],"/home/mahmoud/infograph/front-end/shipping/src/components/Auth/AuthForm.js",["52"],"import { useContext, useRef, useState } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { AuthContext } from \"../../store/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const ctx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [load, setLoad] = useState(null);\n  const userNameRef = useRef();\n  const phoneRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const obj = isLogin\n      ? {\n          password: passwordRef.current.value,\n          email: emailRef.current.value,\n        }\n      : {\n          password: passwordRef.current.value,\n          email: emailRef.current.value,\n          username: userNameRef.current.value,\n          phoneNumber: phoneRef.current.value,\n        };\n    const sendData = async () => {\n      setLoad(\"wait please . . .\")\n      let url;\n      if (isLogin) {\n        url = \"https://infograph-backk.herokuapp.com/users/login\";\n      } else {\n        url = \"https://infograph-backk.herokuapp.com/users\";\n      }\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify(obj),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setLoad(\"You will be in soon . . .\")\n\n        if (!response.ok) {\n          setLoad(null)\n          throw \"the email or password is not valid!\";\n        }\n        const data = await response.json();\n        console.log(data.token);\n        console.log(data)\n        ctx.loggIn(data.token,data.username);\n        setLoad(null)\n        history.push(\"/\");\n      } catch (error) {\n        setError(error)\n      }\n    };\n\n    sendData();\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        {!isLogin ? (\n          <>\n            <div className={classes.control}>\n              <label htmlFor=\"username\">Your UserName</label>\n              <input type=\"text\" id=\"username\" ref={userNameRef} required />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"phone\">Your Phone Number</label>\n              <input\n                type=\"tel\"\n                pattern=\"[0]{2}-[0-9]{3}-[0-9]{9}\"\n                id=\"phone\"\n                ref={phoneRef}\n                required\n              />\n              <small>Format: 00-962-789077777</small>\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"email\">Your Email</label>\n              <input type=\"email\" id=\"email\" ref={emailRef} required />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"password\">Your Password</label>\n              <input type=\"password\" id=\"password\" ref={passwordRef} required />\n            </div>\n            <div className={classes.actions}>\n              <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n              <button\n                type=\"button\"\n                className={classes.toggle}\n                onClick={switchAuthModeHandler}\n              >\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className={classes.control}>\n              <label htmlFor=\"email\">Your Email</label>\n              <input type=\"email\" id=\"email\" ref={emailRef} required />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"password\">Your Password</label>\n              <input type=\"password\" id=\"password\" ref={passwordRef} required />\n            </div>\n            {load && <p>{load}</p>}\n            {error&&<p>{error}</p>}\n            <div className={classes.actions}>\n              <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n              <button\n                type=\"button\"\n                className={classes.toggle}\n                onClick={switchAuthModeHandler}\n              >\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\n              </button>\n            </div>\n       \n          </>\n        )}\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","/home/mahmoud/infograph/front-end/shipping/src/components/StartingPage/StartingPageContent.js",[],"/home/mahmoud/infograph/front-end/shipping/src/components/Layout/Layout.js",[],"/home/mahmoud/infograph/front-end/shipping/src/components/Layout/MainNavigation.js",[],"/home/mahmoud/infograph/front-end/shipping/src/pages/AddPackagePage.js",["53"],"import { useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.css\";\n\nconst AddPackage = (props) => {\n  const history=useHistory()\n const [doneState,setDoneState]=useState(null)\n  const [name, setName] = useState(\"fedix\");\n  const [labels, setLabels] = useState({});\n  const [serviceID, setServiceID] = useState([]);\n  const [serviceIDName, setServiceIDName] = useState([]);\n  const width = useRef();\n  const height = useRef();\n  const length = useRef();\n  const weight = useRef();\n  const serviceProviderHandleer = () => {\n    let e = document.getElementById(\"gg\");\n    let text = e.options[e.selectedIndex].text;\n    console.log(text);\n    setName(text);\n  };\n  const serviceIdHandleer = () => {\n    let e = document.getElementById(\"dd\");\n    let text = e.options[e.selectedIndex].text;\n    console.log(text);\n    setServiceIDName(text);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault() \n    const obj = {\n      serviceProvider: name,\n      serviceID: serviceIDName,\n      width: width.current.value,\n      height: height.current.value,\n      length: length.current.value,\n      weight: weight.current.value,\n    };\n    console.log(obj);\n    const sendData = async () => {\n      const token=localStorage.getItem('token')\n      try {\n        const response = await fetch(\"https://infograph-backk.herokuapp.com/packages\", {\n          method: \"POST\",\n          body: JSON.stringify(obj),\n          headers: {\n            'Authorization': 'Bearar '+ token, \n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw \"check your values\";\n        }\n        setDoneState('Done !, you will redirect to your packages page soon')\n        console.log(\"good\");\nsetTimeout(()=>{\nhistory.push('/viewpackage')\n},1000)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    sendData();\n    width.current.value = \"\";\n    height.current.value = \"\";\n    length.current.value = \"\";\n    weight.current.value = \"\";\n  };\n\n  useEffect(() => {\n    if (name === \"UPS\") {\n      setLabels({\n        width: \"width [inch]\",\n        height: \"height [inch]\",\n        length: \"length [inch]\",\n        weight: \"weight [pound]]\",\n      });\n      setServiceID([\"UPSExpress\", \"UPS2DAY\"]);\n    } else {\n      setLabels({\n        width: \"width [cm]\",\n        height: \"height [cm]\",\n        length: \"length [cm\",\n        weight: \"weight [gram]\",\n      });\n      setServiceID([\"fedexAIR\", \"fedexGroud\"]);\n    }\n  }, [name]);\n  return (\n    <>\n      <div className=\"layout-div\">\n        <form className=\"form-layout\" onSubmit={submitHandler}>\n          <div className=\"ceils-field\">\n            <label>Choose the company</label>\n            <select id=\"gg\" onChange={serviceProviderHandleer} required>\n            <option value=\"\" disabled selected>Choose the Service Provider</option>\n              <option value=\"1\">FedEx</option>\n              <option value=\"2\">UPS</option>\n            </select>\n          </div>\n          <div className=\"ceils-field\">\n            <label>ServiceID</label>\n            <select id=\"dd\" onChange={serviceIdHandleer} required>\n              <option value=\"\" disabled selected>Choose the Service id</option>\n              <option value=\"1\">{serviceID[0]}</option>\n              <option value=\"2\">{serviceID[1]}</option>\n            </select>\n          </div>\n\n          <div>\n            <p>packageDetails</p>\n            <div className=\"ceils-field\">\n              {\" \"}\n              <label>{labels.width} </label>\n              <input type=\"number\" ref={width} required></input>\n            </div>\n            <div className=\"ceils-field\">\n              <label>{labels.height}</label>\n              <input type=\"number\" ref={height} required></input>\n            </div>\n            <div className=\"ceils-field\">\n              <label>{labels.length}</label>\n              <input type=\"number\" ref={length} required></input>\n            </div>\n            <div className=\"ceils-field\">\n              {\" \"}\n              <label>{labels.weight}</label>\n              <input type=\"number\" ref={weight} required></input >\n            </div>\n            {doneState}\n            <div>\n              <button className=\"btn\">Add package</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddPackage;\n","/home/mahmoud/infograph/front-end/shipping/src/pages/ViewPackagesPage.js",[],"/home/mahmoud/infograph/front-end/shipping/src/store/auth.js",["54"],"import { createContext, Provider, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const AuthContext = createContext({\n user:\"\",\n  loggIn: (token) => {},\n  loggOut: () => {},\n  token: \"\",\n  isLoggIn: false,\n});\n\nconst AuthProvider = (props) => {\nconst initialtoken=localStorage.getItem('token')\nconst initialuser=localStorage.getItem('username')\n  const history=useHistory()\n  const [token, setToken] = useState(initialtoken);\n  const [userName, setUserName] = useState(initialuser);\n\n\n  const loggIn = (token,username) => {\n    setToken(token);\n    setUserName(username)\n    localStorage.setItem(\"token\", token)\n    localStorage.setItem(\"username\", username)\n\n    console.log(token)\n  ;\n  };\n  const loggOut = () => {\n    setToken(null);\n    setUserName(null)\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    history.push('/')\n  };\n\n  const isLog=  !!token\n  const authValue = {\n    user:userName,\n    loggIn: loggIn,\n    loggOut: loggOut,\n    token: token,\n    isLoggIn: isLog,\n  };\n  return <AuthContext.Provider value={authValue}>{props.children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":53,"column":11,"nodeType":"61","messageId":"62","endLine":53,"endColumn":55},{"ruleId":"59","severity":1,"message":"60","line":52,"column":11,"nodeType":"61","messageId":"62","endLine":52,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":1,"column":25,"nodeType":"65","messageId":"66","endLine":1,"endColumn":33},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]